{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\Desktop\\\\boi\\\\SAP_web\\\\src\\\\components\\\\signup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./../components/styles.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Demo = () => {\n  _s();\n\n  const [count, setCount] = useState(\"\");\n  const [array, setArray] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [edited, setEdited] = useState(\"\");\n\n  const addItem = () => {\n    if (!count) {\n      alert(\"Please fill some details\");\n    } else if (count && toggle) {\n      setArray(array.map(element => {\n        if (element.id === edited) {\n          return { ...element,\n            name: count\n          };\n        }\n\n        return element;\n      }));\n      setEdited(\"\");\n      setToggle(false);\n      setCount(\"\");\n    } else {\n      const uniqId = {\n        id: new Date().getTime().toString(),\n        name: count\n      };\n      setArray([...array, uniqId]);\n      setCount(\"\");\n      Document.getElementById(\"clicked\").focus();\n    }\n  };\n\n  const deleteItem = index => {\n    const updatedItem = array.filter(element => {\n      return element.id !== index;\n    });\n    setArray(updatedItem);\n  };\n\n  const editItem = index => {\n    const editedItem = array.find(element => {\n      return element.id === index;\n    });\n    setEdited(index);\n    setToggle(true);\n    setCount(editedItem.name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"childDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"heading\",\n            children: \"-- ADD YOUR ITEM --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"fname\",\n            name: \"fname\",\n            className: \"data\",\n            placeholder: \"Write Here....\",\n            autoComplete: \"off\",\n            value: count,\n            onChange: event => setCount(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonDiv\",\n            children: toggle ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => addItem(),\n              children: \"-UPDATE-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              id: \"clicked\",\n              onClick: () => addItem(),\n              children: \"-ADD-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uniqueDivs\",\n            children: array.map((element, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"uniqueDiv\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: element.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => editItem(element.id),\n                  children: \"UPDATE|\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => deleteItem(element.id),\n                  children: \"|DELETE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonRemove\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setArray([]),\n              children: \"Remove all elements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Demo, \"KS/7myTR2EU9yORTaQjOkTBZmbQ=\");\n\n_c = Demo;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["C:/Users/Aditya/Desktop/boi/SAP_web/src/components/signup.js"],"names":["React","useState","Demo","count","setCount","array","setArray","toggle","setToggle","edited","setEdited","addItem","alert","map","element","id","name","uniqId","Date","getTime","toString","Document","getElementById","focus","deleteItem","index","updatedItem","filter","editItem","editedItem","find","event","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./../components/styles.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst Demo = () => {\r\n  const [count, setCount] = useState(\"\");\r\n  const [array, setArray] = useState([]);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [edited, setEdited] = useState(\"\");\r\n\r\n  const addItem = () => {\r\n    if (!count) {\r\n      alert(\"Please fill some details\");\r\n    } else if (count && toggle) {\r\n      setArray(\r\n        array.map((element) => {\r\n          if (element.id === edited) {\r\n            return { ...element, name: count };\r\n          }\r\n          return element;\r\n        })\r\n      );\r\n      setEdited(\"\");\r\n      setToggle(false);\r\n      setCount(\"\");\r\n    } else {\r\n      const uniqId = {\r\n        id: new Date().getTime().toString(),\r\n        name: count,\r\n      };\r\n      setArray([...array, uniqId]);\r\n      setCount(\"\");\r\n      Document.getElementById(\"clicked\").focus()\r\n    }\r\n  };\r\n\r\n  const deleteItem = (index) => {\r\n    const updatedItem = array.filter((element) => {\r\n      return element.id !== index;\r\n    });\r\n    setArray(updatedItem);\r\n  };\r\n\r\n  const editItem = (index) => {\r\n    const editedItem = array.find((element) => {\r\n      return element.id === index;\r\n    });\r\n    setEdited(index);\r\n    setToggle(true);\r\n    setCount(editedItem.name);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mainDiv\">\r\n        <div className=\"rightDiv\">\r\n          <div className=\"childDiv\">\r\n            <h2 className=\"heading\">-- ADD YOUR ITEM --</h2>\r\n            <input\r\n              type=\"text\"\r\n              id=\"fname\"\r\n              name=\"fname\"\r\n              className=\"data\"\r\n              placeholder=\"Write Here....\"\r\n              autoComplete=\"off\"\r\n              value={count}\r\n              onChange={(event) => setCount(event.target.value)}\r\n            ></input>\r\n            <div className=\"buttonDiv\">\r\n              {toggle ? (\r\n                <button type=\"button\" onClick={() => addItem()}>\r\n                  -UPDATE-\r\n                </button>\r\n              ) : (\r\n                <button type=\"button\" id=\"clicked\" onClick={() => addItem()}>\r\n                  -ADD-\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className=\"uniqueDivs\">\r\n              {array.map((element, index) => {\r\n                return (\r\n                  <div className=\"uniqueDiv\" key={index}>\r\n                    <h3>{element.name}</h3>\r\n                    <button type=\"button\" onClick={() => editItem(element.id)}>\r\n                      UPDATE|\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => deleteItem(element.id)}\r\n                    >\r\n                      |DELETE\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"buttonRemove\">\r\n              <button type=\"button\" onClick={() => setArray([])}>\r\n                Remove all elements\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n"]},"metadata":{},"sourceType":"module"}